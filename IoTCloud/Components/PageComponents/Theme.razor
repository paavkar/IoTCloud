@rendermode InteractiveServer

<FluentDesignTheme @bind-Mode="@Mode" @bind-OfficeColor="@OfficeColor" StorageName="theme" />

<FluentButton Style="margin-left: 10px;"
              BackgroundColor="rgba(0, 0, 0, 0)"
              OnClick="SetMode"
              IconStart="@(Mode == DesignThemeModes.Dark
                ? new Icons.Filled.Size20.WeatherSunny().WithColor(Color.Warning)
                : new Icons.Filled.Size20.WeatherMoon().WithColor(Color.Warning))" />

@code {
    public DesignThemeModes Mode { get; set; } = DesignThemeModes.Dark;

    public OfficeColor? OfficeColor { get; set; }

    public bool _isDark { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        _isDark = Mode == DesignThemeModes.Dark ? true : false;
        return base.OnAfterRenderAsync(firstRender);
    }

    private async Task SetMode()
    {
        IsDark = !IsDark;
    }

    public bool IsDark
    {
        get => _isDark;
        set
        {
            _isDark = value;
            Mode = _isDark ? DesignThemeModes.Dark : DesignThemeModes.Light;
        }
    }
}
